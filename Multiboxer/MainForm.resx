<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStripMainStatus.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>210, 17</value>
  </metadata>
  <metadata name="helpProvider_IgnoreList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAgHyMAIB8jDB4cHiMdGRojHRkaIx0ZGiMdGRojHRkaIx0ZGiMdGRojHRkaIx0ZGiMdGRojHRkaIx0Z
        GiMfHB8jHhseIxsXGSMbFxkjGxcZIxsXGSMbFxkjGxcZIxsXGSMbFxkjGxcZIxsXGSMbFxkjGxcZIx0b
        HiMgHyMMIB8jACAfIwAgHyJnIyUs4ScsNd8nLDXfJyw13ycsNd8nLDXfJyw13ycsNd8nLDXfJyw13ycs
        Nd8nLDXfJyw13yMlLN8lJy7fKjA53yowOd8qMDnfKjA53yowOd8qMDnfKjA53yowOd8qMDnfKjA53yow
        Od8qMDnfJScu4SAeImcgHyMAIB8jAB8dIH81R13/S3Ga/0pwmP9KcJj/SnCY/0pwmP9KcJj/SnCY/0pw
        mP9KcJj/SnCY/0pwmP9LcZr/NEZc/0BTZ/9ji7H/Yoqv/2KKr/9iiq//Yoqv/2KKr/9iiq//Yoqv/2KK
        r/9iiq//Yoqv/2OLsv9BVGn/HhwffyAfIwAgHyMAHhwffz1RaP9bhbH/WoSv/1qEr/9ahK//WoSv/1qE
        r/9ahK//WoSv/1qEr/9Zg67/VICs/1F+rP83TGT/Sl50/3aiy/91oMn/daDJ/3Wgyf91oMn/daDJ/3Wg
        yf91oMn/daDJ/3SgyP9vncf/bp3H/0Zcc/8eHB5/IB8jACAfIwAeHB9/QVRq/2SNtf9ji7P/Y4uz/2OL
        s/9ji7P/Y4uz/2OLs/9ji7P/Y4uz/2OLs/9hibL/VoKu/zdMZP9NYXX/fafN/3yly/98pcv/fKXL/3yl
        y/98pcv/fKXL/3yly/98pcv/fKXL/3qkyv9yn8j/RVxy/x4cH38gHyMAIB8jAB4cH39BVGr/ZI21/2OL
        s/9ji7P/Y4uz/2OLs/9ji7P/Y4uz/2OLs/9ji7P/Y4uz/2OLs/9fiLL/OExk/01hdf99p83/fKXL/3yl
        y/98pcv/fKXL/3yly/98pcv/fKXL/3yly/98pcv/fKXL/3mky/9GXHP/HhsefyAfIwAgHyMAHhwff0FU
        av9kjbX/Y4uz/2OLs/9ji7P/Y4y0/2OLs/9ji7P/Y4y0/2OLs/9ji7P/Y4uz/2GKtP85TWX/TWF1/32n
        zf98pcv/fKXL/3yly/98psz/fKXL/3yly/98psz/fKXL/3yly/98pcv/e6XM/0ddc/8eGx5/IB8jACAf
        IwAeHB9/QVRq/2SNtf9ji7P/Y4uz/2OKsv9fhKr/Y4uz/2OLs/9fhKr/Y4qy/2OLs/9ji7P/YYq0/zlN
        Zf9NYXX/fafN/3yly/98pcv/e6TK/3acwP98pcv/fKXL/3adwP97pMr/fKXL/3yly/97pcz/R11z/x4b
        Hn8gHyMAIB8jAB4cH39BVGr/ZI21/2OLs/9jjLT/XYGm/zQ+Tf9EV23/RFdt/zQ+Tf9dgab/Y4y0/2OL
        s/9hirT/OU1l/01hdf99p83/fKXL/32mzP9zmLv/O0ZU/1Blev9QZXr/O0ZU/3OZu/99psz/fKXL/3ul
        zP9HXXP/HhsefyAfIwAgHyMAHhwff0FUav9kjbX/Y4uz/2SMtP9bfaH/JjJA/xw8V/8cO1f/JjJA/1t9
        of9kjLT/Y4uz/2GKtP85TWX/TWF1/32nzf98pcv/fabM/3GUtv8tN0P/LEJX/yxCVv8tN0P/cZS2/32m
        zP98pcv/e6XM/0ddc/8eGx5/IB8jACAfIwAeHB9/QVRq/2SNtf9ji7P/ZIy0/1t9oP8mO0//E4Tb/xOE
        2/8mO0//W32g/2SMtP9ji7P/YYq0/zlNZf9NYXX/fafN/3yly/99psz/cJS1/zJCUv9Mndv/TJ3b/zJC
        Uv9wlLX/fabM/3yly/97pcz/R11z/x4bHn8gHyMAIB8jAB4cH39CVWv/ZY62/2SMtP9ljbX/XH6h/yY7
        T/8Si+X/Eovl/yY7T/9cfqH/ZY21/2SMtP9ijLX/OU5l/05hdv9+qM7/fabM/36nzf9xlbb/MkJS/0+l
        5f9PpeX/MkJS/3GVtv9+p83/fabM/3ymzf9IXXT/HhsefyAfIwAgHyMAHhwffz1OYf9cfqP/W32h/1t+
        ov9UcZD/JjdJ/xR8zf8UfM3/JTZI/1Nxj/9afqH/Wn2g/1l9of81R1z/R1hq/3GWuP9wlLb/cZW3/2aF
        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
        AP//AAD//4AB//+AAf//wAP///////////8=
</value>
  </data>
</root>